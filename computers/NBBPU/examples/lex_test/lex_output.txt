('QUOTE', ' A Program to test the NBB lexer ')
('KEYWORD', 'int')
('ID', 'g')
('BINARYOP', '=')
('NUMBER', 42)
('SEMICOLON', ';')
('KEYWORD', 'int')
('ID', 'neg_g')
('BINARYOP', '=')
('NUMBER', -42)
('SEMICOLON', ';')
('KEYWORD', 'int')
('ID', 'main')
('LEFT_PARENT', '(')
('RIGHT_PARENT', ')')
('LEFT_BRACE', '{')
('KEYWORD', 'int')
('ID', 'cycles')
('BINARYOP', '=')
('NUMBER', 11)
('SEMICOLON', ';')
('COMMENT', ' Blink cycles')
('KEYWORD', 'int')
('ID', 'period')
('BINARYOP', '=')
('NUMBER', 1000)
('SEMICOLON', ';')
('COMMENT', ' Blink period')
('KEYWORD', 'int')
('ID', 'i')
('BINARYOP', '=')
('NUMBER', 0)
('SEMICOLON', ';')
('COMMENT', ' Cycle index')
('KEYWORD', 'int')
('ID', 'j')
('BINARYOP', '=')
('NUMBER', 0)
('SEMICOLON', ';')
('COMMENT', ' Period index')
('KEYWORD', 'int')
('ID', 'state')
('BINARYOP', '=')
('NUMBER', 0)
('SEMICOLON', ';')
('COMMENT', ' Initial state')
('KEYWORD', 'for')
('LEFT_PARENT', '(')
('ID', 'i')
('BINARYOP', '=')
('NUMBER', 0)
('SEMICOLON', ';')
('ID', 'i')
('BINARYOP', '<')
('ID', 'cycles')
('SEMICOLON', ';')
('ID', 'i')
('BINARYOP', '+')
('BINARYOP', '+')
('RIGHT_PARENT', ')')
('LEFT_BRACE', '{')
('KEYWORD', 'for')
('LEFT_PARENT', '(')
('ID', 'j')
('BINARYOP', '=')
('NUMBER', 0)
('SEMICOLON', ';')
('ID', 'j')
('BINARYOP', '<')
('ID', 'period')
('SEMICOLON', ';')
('ID', 'j')
('BINARYOP', '+')
('BINARYOP', '+')
('RIGHT_PARENT', ')')
('LEFT_BRACE', '{')
('RIGHT_BRACE', '}')
('ID', 'state')
('BINARYOP', '=')
('BINARYOP', '!')
('ID', 'state')
('SEMICOLON', ';')
('RIGHT_BRACE', '}')
('KEYWORD', 'return')
('NUMBER', 0)
('SEMICOLON', ';')
('RIGHT_BRACE', '}')