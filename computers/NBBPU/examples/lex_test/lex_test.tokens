0001:Token(COMMENT, ' A Program to test the NBB lexer ')
0002:Token(INT, 'int')
0002:Token(ID, 'x')
0002:Token(SEMICOLON, ';')
0003:Token(INT, 'int')
0003:Token(ID, 'g')
0003:Token(ASSIGN, '=')
0003:Token(INTEGER, 42)
0003:Token(SEMICOLON, ';')
0004:Token(INT, 'int')
0004:Token(ID, 'neg_g')
0004:Token(ASSIGN, '=')
0004:Token(INTEGER, -42)
0004:Token(SEMICOLON, ';')
0006:Token(VOID, 'void')
0006:Token(ID, 'foo')
0006:Token(LEFT_PARENT, '(')
0006:Token(INT, 'int')
0006:Token(ID, 'outer_loops')
0006:Token(COMMA, ',')
0006:Token(INT, 'int')
0006:Token(ID, 'inner_loops')
0006:Token(RIGHT_PARENT, ')')
0007:Token(LEFT_BRACE, '{')
0008:Token(INT, 'int')
0008:Token(ID, 'i')
0008:Token(SEMICOLON, ';')
0009:Token(INT, 'int')
0009:Token(ID, 'j')
0009:Token(SEMICOLON, ';')
0010:Token(FOR, 'for')
0010:Token(LEFT_PARENT, '(')
0010:Token(ID, 'i')
0010:Token(ASSIGN, '=')
0010:Token(INTEGER, 0)
0010:Token(SEMICOLON, ';')
0010:Token(ID, 'i')
0010:Token(LESS, '<')
0010:Token(ID, 'outer_loops')
0010:Token(SEMICOLON, ';')
0010:Token(ID, 'i')
0010:Token(INCREMENT, '++')
0010:Token(RIGHT_PARENT, ')')
0011:Token(LEFT_BRACE, '{')
0012:Token(FOR, 'for')
0012:Token(LEFT_PARENT, '(')
0012:Token(ID, 'j')
0012:Token(ASSIGN, '=')
0012:Token(INTEGER, 0)
0012:Token(SEMICOLON, ';')
0012:Token(ID, 'j')
0012:Token(LESS, '<')
0012:Token(ID, 'inner_loops')
0012:Token(SEMICOLON, ';')
0012:Token(ID, 'j')
0012:Token(INCREMENT, '++')
0012:Token(RIGHT_PARENT, ')')
0013:Token(LEFT_BRACE, '{')
0014:Token(RIGHT_BRACE, '}')
0015:Token(RIGHT_BRACE, '}')
0016:Token(RETURN, 'return')
0016:Token(SEMICOLON, ';')
0017:Token(RIGHT_BRACE, '}')
0019:Token(VOID, 'void')
0019:Token(ID, 'main')
0019:Token(LEFT_PARENT, '(')
0019:Token(RIGHT_PARENT, ')')
0020:Token(LEFT_BRACE, '{')
0021:Token(INT, 'int')
0021:Token(ID, 'cycles')
0021:Token(ASSIGN, '=')
0021:Token(INTEGER, 11)
0021:Token(SEMICOLON, ';')
0021:Token(COMMENT, ' Blink cycles')
0022:Token(INT, 'int')
0022:Token(ID, 'period')
0022:Token(ASSIGN, '=')
0022:Token(INTEGER, 1000)
0022:Token(SEMICOLON, ';')
0022:Token(COMMENT, ' Blink period')
0023:Token(INT, 'int')
0023:Token(ID, 'i')
0023:Token(ASSIGN, '=')
0023:Token(INTEGER, 0)
0023:Token(SEMICOLON, ';')
0023:Token(COMMENT, ' Cycle index')
0024:Token(INT, 'int')
0024:Token(ID, 'j')
0024:Token(ASSIGN, '=')
0024:Token(INTEGER, 0)
0024:Token(SEMICOLON, ';')
0024:Token(COMMENT, ' Period index')
0026:Token(INT, 'int')
0026:Token(ID, 'state')
0026:Token(ASSIGN, '=')
0026:Token(INTEGER, 0)
0026:Token(SEMICOLON, ';')
0026:Token(COMMENT, ' Initial state')
0027:Token(FOR, 'for')
0027:Token(LEFT_PARENT, '(')
0027:Token(ID, 'i')
0027:Token(ASSIGN, '=')
0027:Token(INTEGER, 0)
0027:Token(SEMICOLON, ';')
0027:Token(ID, 'i')
0027:Token(LESS, '<')
0027:Token(ID, 'cycles')
0027:Token(SEMICOLON, ';')
0027:Token(ID, 'i')
0027:Token(INCREMENT, '++')
0027:Token(RIGHT_PARENT, ')')
0028:Token(LEFT_BRACE, '{')
0029:Token(FOR, 'for')
0029:Token(LEFT_PARENT, '(')
0029:Token(ID, 'j')
0029:Token(ASSIGN, '=')
0029:Token(INTEGER, 0)
0029:Token(SEMICOLON, ';')
0029:Token(ID, 'j')
0029:Token(LESS, '<')
0029:Token(ID, 'period')
0029:Token(SEMICOLON, ';')
0029:Token(ID, 'j')
0029:Token(INCREMENT, '++')
0029:Token(RIGHT_PARENT, ')')
0030:Token(LEFT_BRACE, '{')
0031:Token(ID, 'foo')
0031:Token(LEFT_PARENT, '(')
0031:Token(INTEGER, 1)
0031:Token(RIGHT_PARENT, ')')
0031:Token(SEMICOLON, ';')
0032:Token(RIGHT_BRACE, '}')
0033:Token(ID, 'state')
0033:Token(ASSIGN, '=')
0033:Token(NOT, '!')
0033:Token(ID, 'state')
0033:Token(SEMICOLON, ';')
0034:Token(RIGHT_BRACE, '}')
0036:Token(RETURN, 'return')
0036:Token(SEMICOLON, ';')
0037:Token(RIGHT_BRACE, '}')
